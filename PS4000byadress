#geschreven door Dirk Schut (schut@kieback-peter.nl) voor Kieback & Peter te Nunspeet - v2.1 8 januari 2016 onder GNU GPL v2.0
#Python 3.5
import csv
import xlsxwriter

#dit vraagt op wat de naam is van de CSV file. Deze file moet in dezelfde map staan als het programma
filepath = input("geef de filepath op van de CSV-file: ")
#dit opent de CSV file
csvfile =  open(filepath, newline='')
spamreader = csv.reader((line.replace('\0','') for line in csvfile), delimiter=';', quotechar='|')
#dit vraagt hoe de Excelfile moet gaan heten
excelfilename = input("Hoe moet de Excel-file gaan heten? ")+'.xlsx'
#dit maakt de nieuwe excelfile aan. let op! als je het programma niet volledig doorloopt en de file afsluit bestaat de file niet.
workbook = xlsxwriter.Workbook(excelfilename)
#wat arrays en variableen die van tevoren gedefineerd moeten worden.
kolommencsv = [3,4,6,7]
kolomtevullen = 0
sheetnamen=[]
adressen={}
sheetteller=-1
sheetingebruik = 0
totaalrijen = 0
onderlijn = workbook.add_format() #tijd voor wat formatting voor de titels
onderlijn.set_bottom(6) #continue dubbele lijn
celrand = workbook.add_format() #Format voor de cellen aanmaken
celrand.set_border(1) #simpele 'nomrale' celrand
huidigadres = "start"
#Deze loop loopt door de rijen van de CSV file heen. 
for row in spamreader:
    kolommen = ['A','B','C','D','E','F','G','H'] #dit wordt later belangrijk voor het aanroepen van de cellen in de excelfile
    
    if len(row)> 1: #hier check ik of de array in de CSV file wel gevuld is met data sinds niet alle rijen gevuld zijn met data
        

        if str(row[6]) != "": #hier check ik of het waard is om een nieuwe sheet aan te maken (i.e. is de volgende regel waard om te vertalen naar de Excel)
            if str(row[4]) != "Device": #het is ook belangrijk om te checken of je niet alleen de titel gaat afdrukken. 
                    if huidigadres != row[6][0:7]: #checkt of er een nieuw device wordt gedefinieerd en er dus een nieuwe sheet moet komen
                        
                        huidigadres = row[6][0:7]
                        if huidigadres  not in adressen:
                            tabnaam = ""
                            for char in huidigadres:
                                if char in '[]:*?//\\':
                                    tabnaam += "_"
                                else:
                                    tabnaam += str(char)
                                    sheetnamen.append(tabnaam)
                            sheetteller +=1
                            sheetnummer = sheetteller 
                            sheetnamen[sheetteller] = workbook.add_worksheet(tabnaam) #nieuwe sheet met de naam van het nieuwe onderdeel. 
                            sheetnamen[sheetteller].write('A1', 'Bouwplan', celrand)#dit maakt de door de Service techincus in te vullen kopjes aan.
                            sheetnamen[sheetteller].merge_range('B1:I1', "", celrand) #dit voegt de cellen rechts van het kopje samen en omlijnt ze
                            sheetnamen[sheetteller].write('A2', 'Schakelkast', celrand)
                            sheetnamen[sheetteller].merge_range('B2:I2', "", celrand)
                            sheetnamen[sheetteller].write('A3', 'Veld', celrand)
                            sheetnamen[sheetteller].merge_range('B3:I3', "", celrand)
                            sheetnamen[sheetteller].write('A4', 'Klembezetting', celrand)
                            sheetnamen[sheetteller].merge_range('B4:I4', "", celrand)
                            sheetnamen[sheetteller].write('A5', 'Frame', celrand)
                            sheetnamen[sheetteller].merge_range('B5:I5', "", celrand)
                            sheetnamen[sheetteller].write('A6', 'Insteekplaatsen', celrand)
                            sheetnamen[sheetteller].merge_range('B6:I6', "", celrand)
                            sheetnamen[sheetteller].write('A7', 'Code', celrand)
                            sheetnamen[sheetteller].merge_range('B7:I7', "", celrand)
                            sheetnamen[sheetteller].write('A8', 'Field', onderlijn) #het volgende moet met de hand om dat we anders automatisch een sheet aanmaken voor alleen de titels
                            sheetnamen[sheetteller].write('B8', 'Device', onderlijn)
                            sheetnamen[sheetteller].write('C8', 'Adress', onderlijn)
                            sheetnamen[sheetteller].write('D8', 'Text', onderlijn)
                            sheetnamen[sheetteller].write('E8', 'check', onderlijn)
                            sheetnamen[sheetteller].write('F8', 'ok', onderlijn)
                            sheetnamen[sheetteller].write('G8', 'fout', onderlijn)
                            sheetnamen[sheetteller].write('H8', 'RA init', onderlijn)
                            sheetnamen[sheetteller].write('I8', 'opmerkingen', onderlijn)
                            sheetnamen[sheetteller].freeze_panes(8,0)#om de titelbalk in het scherm te houden
                            rijnummer = 8
                            adressen[huidigadres]=[rijnummer, sheetnummer]
                            
                            
                        else:
                            
                            rijnummer   = adressen[huidigadres][0]
                            sheetnummer = adressen[huidigadres][1]
                            
                    else: #hier bepaal ik dat als er geen nieuwe sheet gemaakt wordt, dat er dan in  ieder geval een nieuwe regel bijkomt
                        int(rijnummer)
                        rijnummer += 1
                        for i in kolommencsv:
                            strrijnummer = str(rijnummer)#en nog steeds vullen!
                            cel = kolommen[kolomtevullen]+strrijnummer
                            sheetnamen[sheetnummer].write(cel, row[i], celrand)
                            
                            if i < 7: #voor i kleiner dan 7 (kolommencsv[3]) hoeft er niet een volgende rij gevuld te worden
                                kolomtevullen +=1 #volgende cel naar rechts te vullen
                            else:
                                cel = str('E'+strrijnummer)
                                sheetnamen[sheetnummer].write(cel, "", celrand)
                                cel = str('F'+strrijnummer)
                                sheetnamen[sheetnummer].write(cel, "", celrand)
                                cel = str('G'+strrijnummer)
                                sheetnamen[sheetnummer].write(cel, "", celrand)
                                cel = str('H'+strrijnummer)
                                sheetnamen[sheetnummer].write(cel, "", celrand)
                                cel = str('I'+strrijnummer)
                                sheetnamen[sheetnummer].write(cel, "", celrand)
                                kolomtevullen = 0 #en weer terug naar de eerste kolom om te vullen
                                adressen[huidigadres][0] = rijnummer
                                totaalrijen +=1
                                print(row[6], huidigadres, rijnummer, totaalrijen)

workbook.worksheets_objs.sort(key=lambda x: x.name)  
workbook.close()   #netjes sluiten, anders flipt Python hem
csvfile.close()     #idem
